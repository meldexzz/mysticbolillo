let countryCodes = {
  '1': 'üá∫üá∏', '52': 'üá≤üáΩ', '54': 'üá¶üá∑', '55': 'üáßüá∑', '57': 'üá®üá¥',
  '58': 'üáªüá™', '591': 'üáßüá¥', '593': 'üá™üá®', '595': 'üáµüáæ', '598': 'üá∫üáæ',
  '34': 'üá™üá∏', '39': 'üáÆüáπ', '44': 'üá¨üáß', '49': 'üá©üá™', '33': 'üá´üá∑',
  '506': 'üá®üá∑', '507': 'üáµüá¶', '503': 'üá∏üáª', '502': 'üá¨üáπ', '505': 'üá≥üáÆ',
  '504': 'üá≠üá≥', '809': 'üá©üá¥', '51': 'üáµüá™', '56': 'üá®üá±'
};

let handler = async (m, { isOwner, isAdmin, conn, text, participants, args, command }) => {
  // Verificar que solo administradores o propietarios pueden usar el comando
  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }

  let pesan = args.join` `;
  let oi = `*ùôàùôöùô£ùô®ùôñùôüùôö:* ${pesan}`;
  let teks = `ùôÑùôâùôëùôäùòæùòºùôâùòøùôä ùòΩùôäùôáùôÑùôáùôáùôäùôé. ü•ñ\n\n${oi}\n\n*ùôÄùô©ùôûùô¶ùô™ùôöùô©ùôñùô®:*\n`;

  // Solo se agrega la informaci√≥n de los participantes sin hacer validaci√≥n de registros
  for (let mem of participants) {
    let num = mem.id.split('@')[0];
    let code = Object.keys(countryCodes).find(c => num.startsWith(c)) || 'üåç';
    let flag = countryCodes[code] || 'üåç';
    teks += `${flag} @${num}\n`;
  }

  teks += `\n${wm}`;
  conn.sendMessage(m.chat, { text: teks, mentions: participants.map(a => a.id) });
};

handler.help = ['tagall <mensaje>', 'invocar <mensaje>'];
handler.tags = ['group'];
handler.command = /^(tagall|invocar|invocacion|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;
handler.botAdmin = true;

export default handler;
