let handler = async function (m, { conn, text, usedPrefix, command }) {
  // Validaci√≥n de hora y tipo de partida
  let timePattern = /^([01]?[0-9]|2[0-3]):([0-5][0-9])\s?(AM|PM|am|pm)?$/;
  let args = text.split(' ');

  // Hora predeterminada
  let eventTime = "00:00";
  let partidaTipo = "-";  // Predeterminado

  // Validar hora
  let timeMatch = args[0]?.match(timePattern);
  if (timeMatch) {
    let [_, hours, minutes, period] = timeMatch;
    hours = parseInt(hours);
    minutes = parseInt(minutes);

    // Ajustar formato a 12 horas si es necesario
    if (period && period.toUpperCase() === "PM" && hours < 12) {
      hours += 12;
    } else if (period && period.toUpperCase() === "AM" && hours === 12) {
      hours = 0;
    }

    // Construir la hora
    eventTime = `${hours % 24}:${minutes.toString().padStart(2, "0")} ${period ? period.toUpperCase() : ""}`.trim();
  }

  // Validar tipo de partida (Infinito o CLK)
  const validTipos = ["infinito", "clk"];
  if (args[1] && validTipos.includes(args[1].toLowerCase())) {
    partidaTipo = args[1][0].toUpperCase() + args[1].slice(1); // Capitaliza la primera letra
  }

  // Construcci√≥n del mensaje
  let txt = `‚ú® ¬°Lista para actividad 6vs6! ‚ú®\n\n`;
  txt += `ü•ñ| ùêáùê®ùê´ùêö ùêùùêûùê• ùêûùêØùêûùêßùê≠ùê®: üïí ${eventTime}\n`;
  txt += `üéÆ| ùêìùê¢ùê©ùê® ùêùùêû ùê©ùêöùê´ùê≠ùê¢ùêùùêö: ${partidaTipo}\n\n`;

  // Agregar la escuadra
  txt += `üåü *ESCUADRA 1:*\n`;
  txt += `   ü•Ø\n`;
  txt += `   ü•ñ\n`;
  txt += `   ü•ñ\n`;
  txt += `   ü•ñ\n`;
  txt += `   ü•ñ\n`;
  txt += `   ü•ñ\n\n`;

  txt += `üåü ¬°ùêçùê®ùê¨ ùêØùêûùê¶ùê®ùê¨ ùêûùêß ùêûùê• ùê£ùêÆùêûùê†ùê®! üåü\n`;
  txt += `ùêÅùê®ùê•ùê¢ùê•ùê•ùê® ùêõùê®ùê≠ ü•ñ`;

  await conn.reply(m.chat, txt);  // Enviar el mensaje
}

// Configuraci√≥n del comando
handler.help = ['6vs6'];
handler.tags = ['game'];
handler.command = ['6vs6'];

export default handler;
